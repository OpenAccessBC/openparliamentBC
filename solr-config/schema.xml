<?xml version="1.0" encoding="UTF-8" ?>
<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="openparliament" version="1.6">
<!-- attribute "name" is the name of this schema and is only used for display purposes.
	   Applications should change this to reflect the nature of the search collection.
	   version="1.4" is Solr's version number for the schema syntax and semantics.  It should
	   not normally be changed by applications.
	   1.0: multiValued attribute did not exist, all fields are multiValued by nature
	   1.1: multiValued attribute introduced, false by default
	   1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
	   1.3: removed optional field compress feature
	   1.4: default auto-phrase (QueryParser feature) to off
	 -->

<types>
<!-- field type definitions. The "name" attribute is
	   just a label to be used by field definitions.  The "class"
	   attribute and any other attributes determine the real
	   behavior of the fieldType.
		 Class names starting with "solr" refer to java classes in the
	   org.apache.solr.analysis package.
	-->

<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
<fieldType name="strings" class="solr.StrField" sortMissingLast="true" multiValued="true" docValues="true" />


<!-- boolean type: "true" or "false" -->
<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

<fieldType name="booleans" class="solr.BoolField" sortMissingLast="true" multiValued="true"/>


<!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
     currently supported on types that are sorted internally as strings
     and on numeric types.
   This includes "string","boolean", and, as of 3.5 (and 4.x),
   int, float, long, date, double, including the "Trie" variants.
   - If sortMissingLast="true", then a sort on this field will cause documents
     without the field to come after documents with the field,
     regardless of the requested sort order (asc or desc).
   - If sortMissingFirst="true", then a sort on this field will cause documents
     without the field to come before documents with the field,
     regardless of the requested sort order.
   - If sortMissingLast="false" and sortMissingFirst="false" (the default),
     then default lucene sorting will be used which places docs without the
     field first in an ascending sort and last in a descending sort.
-->

<!--
  Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.

  These fields support doc values, but they require the field to be
  single-valued and either be required or have a default value.
-->
<fieldType name="int" class="solr.TrieIntField" docValues="true" precisionStep="0" positionIncrementGap="0"/>
<fieldType name="float" class="solr.TrieFloatField" docValues="true" precisionStep="0" positionIncrementGap="0"/>
<fieldType name="long" class="solr.TrieLongField" docValues="true" precisionStep="0" positionIncrementGap="0"/>
<fieldType name="double" class="solr.TrieDoubleField" docValues="true" precisionStep="0" positionIncrementGap="0"/>

<fieldType name="ints" class="solr.TrieIntField" docValues="true" precisionStep="0" positionIncrementGap="0" multiValued="true"/>
<fieldType name="floats" class="solr.TrieFloatField" docValues="true" precisionStep="0" positionIncrementGap="0" multiValued="true"/>
<fieldType name="longs" class="solr.TrieLongField" docValues="true" precisionStep="0" positionIncrementGap="0" multiValued="true"/>
<fieldType name="doubles" class="solr.TrieDoubleField" docValues="true" precisionStep="0" positionIncrementGap="0" multiValued="true"/>

<!--
Numeric field types that index each value at various levels of precision
to accelerate range queries when the number of values between the range
endpoints is large. See the javadoc for NumericRangeQuery for internal
implementation details.

Smaller precisionStep values (specified in bits) will lead to more tokens
indexed per value, slightly larger index size, and faster range queries.
A precisionStep of 0 disables indexing at different precision levels.
-->
<fieldType name="tint" class="solr.TrieIntField" docValues="true" precisionStep="8" positionIncrementGap="0"/>
<fieldType name="tfloat" class="solr.TrieFloatField" docValues="true" precisionStep="8" positionIncrementGap="0"/>
<fieldType name="tlong" class="solr.TrieLongField" docValues="true" precisionStep="8" positionIncrementGap="0"/>
<fieldType name="tdouble" class="solr.TrieDoubleField" docValues="true" precisionStep="8" positionIncrementGap="0"/>

<fieldType name="tints" class="solr.TrieIntField" docValues="true" precisionStep="8" positionIncrementGap="0" multiValued="true"/>
<fieldType name="tfloats" class="solr.TrieFloatField" docValues="true" precisionStep="8" positionIncrementGap="0" multiValued="true"/>
<fieldType name="tlongs" class="solr.TrieLongField" docValues="true" precisionStep="8" positionIncrementGap="0" multiValued="true"/>
<fieldType name="tdoubles" class="solr.TrieDoubleField" docValues="true" precisionStep="8" positionIncrementGap="0" multiValued="true"/>

<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
   is a more restricted form of the canonical representation of dateTime
   http://www.w3.org/TR/xmlschema-2/#dateTime
   The trailing "Z" designates UTC time and is mandatory.
   Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
   All other components are mandatory.

   Expressions can also be used to denote calculations that should be
   performed relative to "NOW" to determine the value, ie...

         NOW/HOUR
            ... Round to the start of the current hour
         NOW-1DAY
            ... Exactly 1 day prior to now
         NOW/DAY+6MONTHS+3DAYS
            ... 6 months and 3 days in the future from the start of
                the current day

   Consult the TrieDateField javadocs for more information.

   Note: For faster range queries, consider the tdate type
-->
<fieldType name="date" class="solr.TrieDateField" docValues="true" precisionStep="0" positionIncrementGap="0"/>
<fieldType name="dates" class="solr.TrieDateField" docValues="true" precisionStep="0" positionIncrementGap="0" multiValued="true"/>

<!-- A Trie based date field for faster date range queries and date faceting. -->
<fieldType name="tdate" class="solr.TrieDateField" docValues="true" precisionStep="6" positionIncrementGap="0"/>

<fieldType name="tdates" class="solr.TrieDateField" docValues="true" precisionStep="6" positionIncrementGap="0" multiValued="true"/>

<!-- A text field with defaults appropriate for English: it
   tokenizes with StandardTokenizer, removes English stop words
   (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
   finally applies Porter's stemming.  The query time analyzer
   also applies synonyms from synonyms.txt. -->
<fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
<analyzer type="index">
  <tokenizer class="solr.StandardTokenizerFactory"/>
  <!-- in this example, we will only use synonyms at query time
  <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
  -->
  <!-- Case insensitive stop word removal.
  -->
  <filter class="solr.StopFilterFactory"
          ignoreCase="true"
          words="stopwords_en.txt"
      />
  <filter class="solr.LowerCaseFilterFactory"/>
  <filter class="solr.EnglishPossessiveFilterFactory"/>
  <!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/> -->
  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
  <filter class="solr.EnglishMinimalStemFilterFactory"/>
  -->
  <filter class="solr.PorterStemFilterFactory"/>
</analyzer>
<analyzer type="query">
  <tokenizer class="solr.StandardTokenizerFactory"/>
  <!-- <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/> -->
  <filter class="solr.StopFilterFactory"
          ignoreCase="true"
          words="stopwords_en.txt"
  />
  <filter class="solr.LowerCaseFilterFactory"/>
  <filter class="solr.EnglishPossessiveFilterFactory"/>
  <!-- <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/> -->
  <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
  <filter class="solr.EnglishMinimalStemFilterFactory"/>
  -->
  <filter class="solr.PorterStemFilterFactory"/>
</analyzer>
</fieldType>

<!-- since fields of this type are by default not stored or indexed,
   any data added to them will be ignored outright.  -->
<fieldType name="ignored" stored="false" indexed="false" docValues="false" multiValued="true" class="solr.StrField" />

<!-- <fieldType name="text_fr" class="solr.TextField" positionIncrementGap="100">
<analyzer>
  <tokenizer class="solr.StandardTokenizerFactory"/>
  <filter class="solr.ElisionFilterFactory" ignoreCase="true" articles="lang/contractions_fr.txt"/>
  <filter class="solr.LowerCaseFilterFactory"/>
  <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_fr.txt" format="snowball" />
  <filter class="solr.FrenchLightStemFilterFactory"/>
</analyzer>
</fieldType> -->
</types>

<fields>

    <field name="_version_" type="long" indexed="true" stored="true"/>


	<field name="id" type="string" indexed="true" stored="true" required="true" />

	<field name="django_ct" type="string" indexed="false"  stored="true"  multiValued="false" />
	<field name="django_id" type="string" indexed="false"  stored="true"  multiValued="false" />

	<field name="doctype" type="string" indexed="true" stored="true" multiValued="false" />

	<field name="province" type="string" indexed="true" stored="true" multiValued="false" />

	<field name="politician" type="string" indexed="true" stored="true" multiValued="false" />

	<field name="url" type="string" indexed="false" stored="true" multiValued="false" />

	<field name="text" type="text_en" indexed="false" stored="true" multiValued="false" />
	
	<field name="searchtext" type="text_en" indexed="true" stored="false" multiValued="false" omitNorms="true"/>

	<field name="boosted" type="text_en" indexed="true" stored="false" multiValued="false" omitNorms="true"/>

	<field name="politician_id" type="string" indexed="true" stored="true" multiValued="false" />
	<field name="who_hocid" type="long" indexed="true" stored="true" multiValued="false" />

	<field name="number" type="string" indexed="false" stored="true" multiValued="false" />

	<field name="session" type="string" indexed="false" stored="true" multiValued="false" />

	<field name="topic" type="string" indexed="true" stored="true" multiValued="false" />

	<field name="title" type="string" indexed="false" stored="true" multiValued="false" />

	<field name="date" type="date" indexed="true" stored="true" multiValued="false" />

	<field name="party" type="string" indexed="true" stored="true" multiValued="false" />

	<field name="doc_url" type="string" indexed="true" stored="false" multiValued="false" />

	<field name="committee" type="string" indexed="false" stored="true" multiValued="false" />
	<field name="committee_slug" type="string" indexed="true" stored="false" multiValued="false" />

</fields>

<!-- Field to use to determine and enforce document uniqueness.
	  Unless this field is marked with required="false", it will be a required field
   -->
<uniqueKey>id</uniqueKey>

<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
<solrQueryParser />

</schema>